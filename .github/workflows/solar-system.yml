name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}    
jobs: 
    unit-testing: # added 1st unit test
        name: Unit Testing
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:      
            MONGO_URI: 'mongodb://localhost:27017/superData'
            MONGO_USERNAME: non-prod-user
            MONGO_PASSWORD: non-prod-password   
        strategy:
          matrix:
            nodejs_version: [18, 20]
            operating_system: [ubuntu-latest]
            exclude:
            - nodejs_version: 18
              operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.nodejs_version }}
        
        - name: Cache NPM dependencies
          uses: actions/cache@v4 
          with: 
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}  
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: nodejs-unit-testing-step
          run: npm test

        # - name: Archive test result
        #   if: always()
        #   uses: actions/upload-artifact@v4
        #   with:
        #     name: Mocha-Test-Result
        #     path: test-results.xml
    code-coverage:
        name: Code Coverage
        container: 
          image: node:18
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            options:
              --name mongo
        env:      
            MONGO_URI: 'mongodb://mongo:27017/superData'
            MONGO_USERNAME: non-prod-user
            MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest     
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          # - name: Setup NodeJS Version - 18
          #   uses: actions/setup-node@v4
          #   with:
          #     node-version: 18
      
          - name: Install Dependencies
            run: npm install
      
          - name: Check Code Coverage
            continue-on-error: true
            run: npm run coverage

          - name: Archive test result
            uses: actions/upload-artifact@v4
            with:
              name: Code-Coverage-Result
              path: coverage
              retention-days: 5
    
    docker:
        name: containerization
        needs: [unit-testing, code-coverage]
        permissions:
          packages: write
        runs-on: ubuntu-latest
        steps:
        - name: checkout
          uses: actions/checkout@v4
          
        - name: Dockerhub Login
          uses: docker/login-action@v3
          with:
            username: ${{vars.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_PASSWORD}}

        - name: Container Registry Login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{github.repository_owner}}
            password: ${{ secrets.GITHUB_TOKEN }} 

        - name: Docker build for testing
          uses: docker/build-push-action@v6
          with:
            context: .  
            push: false
            tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }} 
        
        - name: Docker Image Testing
          run: |
            docker images
            docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}
            echo Testing image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live
        
        - name: Container registry push
          uses: docker/build-push-action@v6
          with:
            context: .  
            push: true
            tags: |
              ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}
              ghcr.io/${{github.repository_owner}}/solar-system:${{ github.sha }}
    Dev-deploy: 
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
          
        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.29.2' # default is latest stable
        
        - name: Set Kubeconfig
        - uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{secrets.KUBECONFIG}} 
        
        - name: Fetch kubernetes cluster details
          run: |
            kubectl version
            echo -------------------------------------
            kubectl get nodes
                   